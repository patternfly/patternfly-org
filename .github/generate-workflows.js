const path = require('path');
const fs = require('fs');

const inDir = path.join(__dirname, 'workflows-src');
const outDir = path.join(__dirname, 'workflows');
const partialsDir = path.join(inDir, 'partials');
const yamlRegex = /\.ya?ml$/;

const partials = fs.readdirSync(partialsDir).reduce((acc, f) => {
  acc[f.replace(yamlRegex, '')] = fs.readFileSync(path.join(partialsDir, f), 'utf8').trim();
  return acc;
}, {});

if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir);
}

fs.readdirSync(inDir)
  .filter(f => f.match(yamlRegex))
  .forEach(f => {
    let contents = fs.readFileSync(path.join(inDir, f), 'utf8');

    Object.entries(partials).forEach(([key, val]) => {
      const regexText = `([ \\t]*)%${key}%`;
      const spacing = contents.match(new RegExp(regexText))[1];
      val = `${spacing}${val.replace(/\n/g, '\n' + spacing)}`;
      contents = contents.replace(new RegExp(regexText, 'g'), val);
    });

    contents = `### WARNING -- this file was generated by ${process.argv[1].split(path.sep).pop()}\n${contents}`;
    fs.writeFileSync(path.join(outDir, f), contents);
  });

