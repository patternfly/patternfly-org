name: build-deploy
on: [push]
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Load node_modules from cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      # v4 build
      - run: yarn build:v4
      - run: node .github/upload-preview.js build/patternfly-org v4
      # v3 build
      - uses: actions/cache@v2
        id: v3-build-cache
        with:
          path: 'build/patternfly-org/v3'
          key: ${{ runner.os }}-build-${{ hashFiles('packages/v3/**') }}
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
        if: steps.v3-build-cache.outputs.cache-hit != 'true'
      - run: cd packages/v3 && bundle install --jobs 4 --retry 3
        if: steps.v3-build-cache.outputs.cache-hit != 'true'
      - run: yarn build:v3
        if: steps.v3-build-cache.outputs.cache-hit != 'true'
      # temporarily move v4 out of the way
      - run: mv build/patternfly-org/v4 build
      - run: node .github/upload-preview.js build/patternfly-org v3
      # deploy
      - run: mv build/v4 build/patternfly-org
      - run: .github/release.sh
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: node scripts/writeV3Redirects.js
      - run: node scripts/writeVersionPrefix.js
      - run: du -sh build/* build/patternfly-org/*
      - run: .github/upload-staging.sh
