name: build-deploy
on:
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
    - '**:**'
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Load v3 and v4 npm deps from cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      # v4 build
      - uses: actions/cache@v2
        id: v4-cache
        name: Load webpack cache
        with:
          path: 'packages/v4/.cache'
          key: ${{ runner.os }}-v4-${{ hashFiles('yarn.lock') }}
      - run: yarn build:v4
        name: Build docs
      - run: node .github/upload-preview.js build/patternfly-org v4
        name: Upload docs
      # v3 build
      - uses: actions/cache@v2
        id: v3-artifact-cache
        name: Load v3 artifact from cache
        with:
          path: 'build/patternfly-org/v3'
          key: ${{ runner.os }}-build-${{ hashFiles('packages/v3/*', 'packages/v3/**') }}
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
        if: steps.v3-artifact-cache.outputs.cache-hit != 'true'
      - run: cd packages/v3 && bundle install --jobs 4 --retry 3
        name: Install v3 ruby deps
        if: steps.v3-artifact-cache.outputs.cache-hit != 'true'
      - run: yarn build:v3
        name: Build v3 docs
        if: steps.v3-artifact-cache.outputs.cache-hit != 'true'
      # temporarily move v4 out of the way
      - run: mv build/patternfly-org/v4 build
        name: Prep upload v3 docs
      - run: node .github/upload-preview.js build/patternfly-org v3
        name: Upload v3 docs
        # only take the time to upload v3 if there's a change
        if: steps.v3-artifact-cache.outputs.cache-hit != 'true'
      # deploy
      #- run: mv build/v4 build/patternfly-org
      #  name: Undo prep upload v3 docs
      #- run: .github/release.sh
      #  env:
      #    GH_TOKEN: ${{ secrets.GH_TOKEN }}
      #  if: github.ref == 'refs/heads/master'
      #- name: Configure AWS Credentials
      #  uses: aws-actions/configure-aws-credentials@v1
      #  with:
      #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
      #    aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      #    aws-region: ${{ secrets.AWS_REGION }}
      #  if: github.ref == 'refs/heads/master'
      #- run: node scripts/writeV3Redirects.js
      #  if: github.ref == 'refs/heads/master'
      #- run: node scripts/writeVersionPrefix.js
      #  if: github.ref == 'refs/heads/master'
      #- run: du -sh build/patternfly-org/*
      #  name: Check size of docs
      #  if: github.ref == 'refs/heads/master'
      #- run: .github/upload-staging.sh
      #  name: Upload docs to staging

