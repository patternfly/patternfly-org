version: 2

# Adapted from https://github.com/circleci/circleci-docs/blob/master/.circleci/config.yml
# Syntax: https://blog.daemonl.com/2016/02/yaml.html
references:
  js_deps_paths: &js_deps_paths
  - node_modules/
  - packages/v3/node_modules/
  - packages/v4/node_modules/
  - packages/v4/theme-patternfly-org/node_modules/
  - packages/v4/patternfly-react/packages/react-docs/node_modules/
  v3_ruby_deps_paths: &v3_ruby_deps_paths
  - packages/v3/.bundle
  - packages/v3/vendor
  v4_build_cache_paths: &v4_build_cache_paths
  - packages/v4/.cache
  - packages/v4/public
  js_deps_cache_key: &js_deps_cache_key
    js-deps-v{{.Environment.CACHE_VERSION}}-{{checksum "yarn.lock"}}
  js_deps_cache_check_key: &js_deps_cache_check_key
    js-deps-checkfile-v{{.Environment.CACHE_VERSION}}-{{checksum "yarn.lock"}}
  v3_ruby_deps_cache_key: &v3_ruby_deps_cache_key
    v3-ruby-deps-v{{.Environment.CACHE_VERSION}}-{{checksum "packages/v3/Gemfile.lock"}}
  v4_build_cache_key: &v4_build_cache_key
    org-build-v{{.Environment.CACHE_VERSION}}-{{checksum "yarn.lock"}}

workflows:
  version: 2
  install_build_deploy:
    jobs:
    - install
    - build_v4:
        requires:
        - install
    - build_v3:
        requires:
        - install
    - deploy:
        requires:
        - build_v4
        - build_v3
        filters:
          branches:
            only: master
jobs:
  install:
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - restore_cache:
        keys:
        - *js_deps_cache_check_key
    - run:
        name: Conditional install
        command: if [ ! -f cachefile ]; then yarn install --frozen-lockfile && touch cachefile; fi
    - save_cache:
        paths: cachefile
        key: *js_deps_cache_check_key
    - save_cache:
        paths: *js_deps_paths
        key: *js_deps_cache_key
  build_v3:
    docker:
    - image: circleci/ruby:latest-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - restore_cache:
        keys:
        - *v3_ruby_deps_cache_key
    - run:
        name: Install v3 deps
        command: |
          cd packages/v3
          bundle install
    - save_cache:
        paths: *v3_ruby_deps_paths
        key: *v3_ruby_deps_cache_key
    - run:
        name: Build v3 docs
        command: yarn build:v3
    - run:
        name: Upload docs to surge.sh
        command: node .circleci/upload-preview.js build/patternfly-org v3
    - persist_to_workspace:
        root: ~/project
        paths: 
        - build
  build_v4:
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - restore_cache:
        keys:
        - *v4_build_cache_key
    - run:
        name: Build patternfly.org docs
        command: yarn build:v4
    - save_cache:
        paths: *v4_build_cache_paths
        key: *v4_build_cache_key
    - run:
        name: Upload docs to surge.sh
        command: node .circleci/upload-preview.js build/patternfly-org v4
    - persist_to_workspace:
        root: ~/project
        paths: 
        - build
  deploy:
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - attach_workspace:
        at: ~/project
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - run:
        name: Avoid Unknown Host for github.com
        command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
    - run:
        name: Set git user
        command: |
          git config user.name patternfly-build
          git config user.email patternfly-build@redhat.com
    - run:
        name: Deploy to NPM
        command: .circleci/release.sh
    - run:
        name: Install AWS CLI
        command: |
          sudo apt-get update
          sudo apt-get install -y -qq python-pip libpython-dev
          pip install --user awscli
    - run:
        name: Write redirects
        command: node scripts/writeV3Redirects.js
    - run:
        name: Write prefixed version
        command: node scripts/writeVersionPrefix.js
    - run:
        name: Check size of docs
        command: du -sh build/* build/patternfly-org/*
    - run:
        name: Set AWS credentials
        command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY}
            aws configure set aws_secret_access_key ${AWS_SECRET_KEY}
            aws configure set region ${AWS_REGION}
    - run:
        name: Sync to staging
        command: .circleci/upload-staging.sh
